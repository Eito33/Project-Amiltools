#NAME : AmilTools
#AUTHOR : GABIN RIMBAULT
#DATE : 13/12/2018
#BUILD : 0.b

#################################### LAST VERSION ####################################

-----------------------------------------------------------------------------------------------


# Maquette : (https://github.com/Eito33/Project-Phantom-Maquette)
    # HTML :
        - Finition de la partie HTML dont quelques retouche.
        - Réalisation HTML des vues des pages suivantes :
            -> User
            -> Calendar
            -> ReportBoard
            -> TaskBoard
            -> BugTracker

    # CSS :
        - Finition de la partie CSS dont quelques retouche.
        - Réalisation CSS des vues suivantes :
            -> User
            -> Calendar
            -> ReportBoard
            -> TaskBoard
            -> BugTracker
        - Les couleurs des différentes page ne sont pas définitives        

-----------------------------------------------------------------------------------------------

# Developpement :
    # React :
        - Finition de l'intégration de la Maquette sur l'environnement React
        - Intégration de l'ensemble des pages sur React
            -> DashBoard
            -> User
            -> Calendar
            -> Report
            -> Task
            -> BugTracker
        - Correction final sur le CSS lié a l'intégration des pages et quelques modification sur le html.
        - Ajout de la Documentation et de la redirection vers GitBook

-----------------------------------------------------------------------------------------------

#Developpement :
    - Mise en place d'un shéma pour faire remonter les données via le dispatcher
    - Mise en place d'un essai sur comment remonter les données :
        -> Actuellement les informations sont remonter comme cela :

------------------------------------> Informations DEV

Information relatif a l'appel du composant Popup depuis la vue Task.

Les actions se déroule dans cette ordre précis :

1- Appel de TaskComponent ->
    -> TaskComponent vérifie si clickToPopup est vrai ou faux
        -> clickToPopup étant faux c'est <TaskView tryToClick={this.tryToClick} /> qui est envoyer au render

2- Affichage de la vue Task
    -> Si l'utilisateur clic sur l'oeil de la premiere ligne 
        -> Cela appel la méthode props tryToclick et renvoie les informations au TaskComponent
        -> Dans taskComponent si click il y a eu grace a la méthode tryToClick alors clickToPopup devient vrai
        -> On vérifie que cela fonctionne grace a componentDidUpdate() le component est recharger

3- Update de taskComponent -> 
    -> TaskComponent vérifie si clickToPopup est vrai ou faux
    -> clickToPopup est vrai !
    -> Envoie de <TaskView test={popup} /> 
        -> test contient un composant. Le composant méthode
    -> Affichage de la vue taskView

4- TaskView s'affiche (en réalité il n'est jamais partit)
    -> Affiche dans l'encadrer prevus a cette effet plus bas le message du composant Popup

------------------------------------> Informations DEV    
        
-----------------------------------------------------------------------------------------------

#Structure :
    - Ecriture du Cahier des Charges 

-----------------------------------------------------------------------------------------------
    
# Bug :
    - Au niveau des CardBoard les fléches de l'onglet view détails ne sont pas bien aligné.
    - Au niveau des CardBoard la séparation entre les deux onglets de la cartes est marqué par l'ombre.
    - Au niveau du MenuLeft les fléches des onglets qui contient plus d'options ce décale quand on passe la souris dessus.

#################################### LAST VERSION ####################################